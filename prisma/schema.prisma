// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  hash      String
  hashedRt  String?
  avatar    String?
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  roleId    String @default("0")

  role      Roles @relation(fields: [roleId], references: [roleId])
  membership Membership[]

  borrowings Borrowings[]
}

model Membership {
  membershipId String   @id
  userId       String
  startDate    DateTime @default(now())
  endDate      DateTime?

  user User @relation(fields: [userId], references: [id])
}

model Roles {
  roleId        String   @id // No default to allow setting specific values
  roleName  String   @default("USER")

  users User[]
}

model Books {
  isbn      String   @id
  title     String
  authorId  Int?
  genreId   Int?
  statusId  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  genre Genres? @relation(fields: [genreId], references: [genreId])
  author Authors? @relation(fields: [authorId], references: [authorId])
  status Status @relation(fields: [statusId], references: [statusId])

  borrowings Borrowings[]
}

model Genres {
  genreId   Int      @id
  genreName String

  books Books[]
}

model Authors {
  authorId  Int     @id
  fullName  String

  books Books[]
}

model Status {
  statusId  Int     @id
  statusName String

  books Books[]
}

model Borrowings {
  borrowingId String   @id
  bookIsbn    String
  userId      String
  borrowedDate DateTime @default(now())
  dueDate     DateTime?

  book Books @relation(fields: [bookIsbn], references: [isbn])
  user User @relation(fields: [userId], references: [id])
}